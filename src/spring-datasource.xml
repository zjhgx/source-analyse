<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="jdbcExceptionTranslator"><ref bean="jdbcExceptionTranslator"/></property>
    </bean>

 

    <bean id="jdbcExceptionTranslator" class="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator">
        <property name="dataSource"><ref bean="localDataSource"/></property>
    </bean>
    <bean id="nativeJdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor" />
    <bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true">
        <property name="nativeJdbcExtractor">
            <ref bean="nativeJdbcExtractor" />
        </property>
    </bean>

<!--     异常拦截器  记录异常日志
    <bean id="xcarsExceptionInterceptor" class="com.upg.ucars.framework.exception.core.ExceptionLogAOP"/> -->
    <!--  事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    
     <bean id="transactionTemplate"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager" />
    </bean>
    
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" propagation="SUPPORTS" />
            <tx:method name="find*" read-only="true" propagation="SUPPORTS" />
            <tx:method name="query*" read-only="true" propagation="SUPPORTS" />
            <tx:method name="autoGenCode"  propagation="REQUIRES_NEW" />
            <tx:method name="openAccount"  propagation="NOT_SUPPORTED" />
            <!--
            <tx:method name="updateAfterCommuTrans"  propagation="REQUIRES_NEW" />
            <tx:method name="updateAfterMZCommuTrans"  propagation="REQUIRES_NEW" />
            <tx:method name="updateAfterCZCommuTrans"  propagation="REQUIRES_NEW" />
            <tx:method name="createAcctFlowNewSession"  propagation="REQUIRES_NEW" />
            <tx:method name="buildAcctRecord"  propagation="REQUIRES_NEW" />
            <tx:method name="deleteAcctRecord"  propagation="REQUIRES_NEW" />
            <tx:method name="buildNegativeAcctRecord"  propagation="REQUIRES_NEW" />
             -->
            <tx:method name="clearEndProcessInstance"  propagation="REQUIRES_NEW" />
            <tx:method name="*" read-only="false" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>
    <aop:config proxy-target-class="true">
        <aop:pointcut id="txServiceFosc" expression="execution (* com..*Service*.*(..))
			and !execution (* com.upg..action.*.*(..))" />
        <aop:advisor pointcut-ref="txServiceFosc" advice-ref="txAdvice" />
<!--         <aop:advisor pointcut-ref="txServiceFosc" advice-ref="xcarsExceptionInterceptor" />
 -->    </aop:config>

	<bean id="dataSourceParent" class="org.apache.tomcat.jdbc.pool.DataSource" abstract="true" destroy-method="close">
		<property name="driverClassName" >
            <value>net.sf.log4jdbc.DriverSpy</value>
        </property>
        <property name="initialSize" value="${dataSource.dbcp.initialSize}"/>
        <property name="maxActive" value="${dataSource.dbcp.maxActive}"/>
        <property name="maxWait" value="${dataSource.dbcp.maxWait}"/>
        <property name="maxIdle" value="${dataSource.dbcp.maxIdle}"/>
        <property name="minIdle" value="${dataSource.dbcp.minIdle}"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testWhileIdle" value="false"/>
        <property name="validationQuery" value="select 1 from dual"/>
	</bean>

    <!-- trbs -->
    <bean id="localDataSource" parent="dataSourceParent">
        <property name="url">
            <value>${trbs.jdbc.url}</value>
        </property>
        <property name="username">
            <value>${trbs.jdbc.username}</value>
        </property>
        <property name="password">
            <value>${trbs.jdbc.password}</value>
        </property>
    </bean>


    <bean id="myEntityInterceptor" class="org.hibernate.EmptyInterceptor" />
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="entityInterceptor">
            <ref bean="myEntityInterceptor"/>
        </property>

        <property name="dataSource">
            <ref local="localDataSource"/>
        </property>
   <!--      <property name="exclude">
            <list>
                <value>com/upg/loan</value>
            </list>
        </property>	 -->
 <!--        <property name="mappingLocations">
            <list>
                <value>classpath*:/org/jbpm/**/*.hbm.xml</value>
                <value>classpath*:/com/upg/**/*.hbm.xml</value>
            </list>
        </property> -->
        <!-- <property name="packagesToScan" value="com.upg"/> -->
        <property name="hibernateProperties">
            <props>
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.DB2Dialect</prop> -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <!-- <prop key="hibernate.default_schema">xcars</prop> -->
                <prop key="hibernate.jdbc.use_scrollable.resultset">true</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.query.factory_class">org.hibernate.hql.ast.ASTQueryTranslatorFactory</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>                
            </props>
        </property>
        <property name="lobHandler" ref="oracleLobHandler" />
        <property name="typeDefinitions">
            <list>
                <bean class="org.springframework.orm.hibernate3.TypeDefinitionBean">
                    <property name="typeName" value="xclob"/>
                    <property name="typeClass" value="org.springframework.orm.hibernate3.support.ClobStringType"/>
                </bean>
            </list>
        </property>
    </bean>
<!--  
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="trjDataSource" />
    </bean>    --> 

	
</beans>